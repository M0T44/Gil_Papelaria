// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Cadastro {
  id       String @id @default(uuid())
  nome     String
  telefone String
  cpf_cnpj String
  cep      String
  bairro   String
  nCasa    String
  cidade   String
  rua      String
  estado   String
  email    String
  senha    String

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  pedido Pedido[]

  @@map("cadastro")
}

model Categoria {
  id   String @id @default(uuid())
  nome String

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  produtos Produto[]

  @@map("categorias")
}

model Produto {
  id         String @id @default(uuid())
  nome       String
  descricao  String
  fabricante String
  quantidade String
  preco      String
  banner     String

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  categorias  Categoria @relation(fields: [categoriaId], references: [id])
  categoriaId String

  itens Itens[]

  @@map("produtos")
}

model Pedido {
  id       String @id @default(uuid())
  n_pedido String
  status   String

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  cadastro   Cadastro @relation(fields: [cadastroId], references: [id])
  cadastroId String   @unique

  itens Itens[]

  @@map("pedidos")
}

model Itens {
  id         String @id @default(uuid())
  quantidade String
  valorUnico String
  valorTotal String

  create_at DateTime? @default(now())
  update_at DateTime? @default(now())

  produtos  Produto @relation(fields: [produtoId], references: [id])
  produtoId String

  pedido   Pedido @relation(fields: [pedidoId], references: [id])
  pedidoId String

  @@map("itens")
}
